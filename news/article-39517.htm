<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://surfboardgithub.github.io/news/article-39517.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>关于 HTTP 长连接</title>
        <meta name="description" content="使用长连接能够减少建立销毁连接的消耗，三次握手、四次挥手对性能影响是很大的。一般 RPC 如 Dubbo 默认都是长连接的，HTTP 1.1 之上也可以支持长连接了，HTTP 2.0 也支持了单一长连" />
        <link rel="icon" href="/assets/website/img/surfboardgithub/favicon.ico" type="image/x-icon"/>
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com" rel="preconnect">
    <link href="https://fonts.gstatic.com" rel="preconnect" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Nunito:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="__ADDON__/js/frontend/surfboardgithub/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/surfboardgithub/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/surfboardgithub/aos/aos.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/surfboardgithub/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/surfboardgithub/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Main CSS File -->
    <link href="/assets/website/css/surfboardgithub/main.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-B6X3DBFZRC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-B6X3DBFZRC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body class="starter-page-page" data-page="detail">
        <header id="header" class="header d-flex align-items-center fixed-top">
        <div class="container-fluid container-xl position-relative d-flex align-items-center">
                        <a href="/" class="logo d-flex align-items-center me-auto">
                <span class="sitename">Surfboard Github</span>
            </a>
                        <nav id="navmenu" class="navmenu">
                <ul>
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li><a href="#">关于</a></li>
                    <li><a href="#">联系</a></li>
                </ul>
                <i class="mobile-nav-toggle d-xl-none bi bi-list"></i>
            </nav>
        </div>
    </header>
    <main class="main" style="margin-top: 6rem;">
        <!-- Page Title -->
        <div class="page-title" data-aos="fade">
            <div class="container d-lg-flex justify-content-between align-items-center">
                <h1 class="mb-2 mb-lg-0">关于 HTTP 长连接</h1>
                <nav class="breadcrumbs">
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li class="current">正文</li>
                    </ol>
                </nav>
            </div>
        </div><!-- End Page Title -->

        <section id="features" class="features section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>使用长连接能够减少建立销毁连接的消耗，三次握手、四次挥手对性能影响是很大的。一般 RPC 如 Dubbo 默认都是长连接的，HTTP 1.1 之上也可以支持长连接了，HTTP 2.0 也支持了单一长连接的多路复用。</p> <p>一般 HTTP 服务前面都会挂 nginx 做负载均衡，那么长连接的设置也分为从客户端到 nginx、从 nginx 到服务端两部分。</p> <p>如果使用 Java 的 apache HTTPClient 可以通过设置 ConnectionKeepAliveStrategy 和协议为 HTTP1.1 来使用长连接，对于 4.2.x 版本设置方法如下所示：</p> <pre><code class="prism language-java">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> ConnectionKeepAliveStrategy KEEP_ALIVE_STRATEGY <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionKeepAliveStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getKeepAliveDuration</span><span class="token punctuation">(</span>HttpResponse response<span class="token punctuation">,</span> HttpContext context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             HeaderElementIterator it <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicHeaderElementIterator</span><span class="token punctuation">(</span>                     response<span class="token punctuation">.</span><span class="token function">headerIterator</span><span class="token punctuation">(</span>HTTP<span class="token punctuation">.</span>CONN_KEEP_ALIVE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">while</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 HeaderElement he <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 String param <span class="token operator">=</span> he<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 String value <span class="token operator">=</span> he<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> param<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">"timeout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>                     	<span class="token comment">// 如果 response header 里有 Keep-Alive:timeout 参数，则使用其值作为长连接超时时间</span>                         <span class="token keyword">return</span> Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>                     <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     <span class="token punctuation">}</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>             <span class="token keyword">return</span> <span class="token number">30</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// 30s</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span><span class="token punctuation">;</span>              HttpParams params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicHttpParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// 指定使用 http1.1，1.1里默认使用长连接</span>             HttpProtocolParams<span class="token punctuation">.</span><span class="token function">setVersion</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> HttpVersion<span class="token punctuation">.</span>HTTP_1_1<span class="token punctuation">)</span><span class="token punctuation">;</span>               SchemeRegistry registry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SchemeRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             registry<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Scheme</span><span class="token punctuation">(</span><span class="token string">"http"</span><span class="token punctuation">,</span> PlainSocketFactory<span class="token punctuation">.</span><span class="token function">getSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">//创建连接池</span>             PoolingClientConnectionManager cm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoolingClientConnectionManager</span><span class="token punctuation">(</span>registry<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MINUTES<span class="token punctuation">)</span><span class="token punctuation">;</span>             cm<span class="token punctuation">.</span><span class="token function">setDefaultMaxPerRoute</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             cm<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              httpClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultHttpClient</span><span class="token punctuation">(</span>cm<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// 设置超时时间</span>             httpClient<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span>CoreConnectionPNames<span class="token punctuation">.</span>CONNECTION_TIMEOUT<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             httpClient<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span>CoreConnectionPNames<span class="token punctuation">.</span>SO_TIMEOUT<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             httpClient<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setParameter</span><span class="token punctuation">(</span>ClientPNames<span class="token punctuation">.</span>CONN_MANAGER_TIMEOUT<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             httpClient<span class="token punctuation">.</span><span class="token function">setKeepAliveStrategy</span><span class="token punctuation">(</span>KEEP_ALIVE_STRATEGY<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>在 NGINX 请求后端服务时启用长连接需要配置：</p> <pre><code>proxy_http_version 1.1;                     proxy_set_header Connection ""; keepalive_timeout  120s 120s; keepalive_requests 10000; </code></pre> <p>关于长连接，有两个参数需要注意：</p> <ol> <li>keepalive_timeout：连接不活跃多长时间后断开，如果服务端（nginx）设置的时间比客户端短的话，可能会导致客户端请求异常。前提是 HTTPClient 都 http.connection.stalecheck 参数置为 false，也就是不在请求前检查连接的有效性。</li> <li>keepalive_requests：用于设置一个keep-alive连接上可以服务的请求的最大数量。当最大请求数量达到时，连接被关闭。nginx 和 Tomcat 上默认都是100，对于 QPS 较高的应用来说 100 有些太小了。</li> </ol> <p>以上两个参数在 nginx、服务端都有，当 QPS 比较高时就需要做适当调整以减少或避免连接都频繁断开、建立。如果服务端使用的 Tomcat 容器，可以在 server.xml 文件里修改配置。</p> <p>在 Spring Boot 2.x 里修改长连接的配置方法如下所示：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Configuration</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TomcatCustomizer</span> <span class="token keyword">implements</span> <span class="token class-name">WebServerFactoryCustomizer</span><span class="token generics function"><span class="token punctuation">&lt;</span>TomcatServletWebServerFactory<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{<!-- --></span>     <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">customize</span><span class="token punctuation">(</span>TomcatServletWebServerFactory factory<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         factory<span class="token punctuation">.</span><span class="token function">addConnectorCustomizers</span><span class="token punctuation">(</span>connector <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">{<!-- --></span>             AbstractHttp11Protocol protocol <span class="token operator">=</span> <span class="token punctuation">(</span>AbstractHttp11Protocol<span class="token punctuation">)</span> connector<span class="token punctuation">.</span><span class="token function">getProtocolHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             protocol<span class="token punctuation">.</span><span class="token function">setMaxKeepAliveRequests</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             protocol<span class="token punctuation">.</span><span class="token function">setKeepAliveTimeout</span><span class="token punctuation">(</span><span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 长连接超时时间，单位 ms</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>上面提到 HTTPClient 的 http.connection.stalecheck 参数用于设置是否在发送请求之前检查连接有效性，如果每次发请求都检查对性能影响也会较大，可以去掉该参数。但是去掉之后，在连接被 NGINX 关闭后依然发请求则会导致 NoHttpResponseException 异常，需要对其进行特殊处理，进行适当的重试。</p> <p><strong>资料</strong></p> <ol> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://lanjingling.github.io/2016/06/11/nginx-https-keepalived-youhua/"  rel="nofollow">nginx 优化</a></li> </ol> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-39516.htm">为什么字符串对象在Java中是不可变的？</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-9-free-node-subscribe-links.htm" title="11月9日 | Surfboard节点订阅每天更新20.9M/S免费节点订阅链接，Surfboard免费机场">11月9日 | Surfboard节点订阅每天更新20.9M/S免费节点订阅链接，Surfboard免费机场</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-29-share-surfboard-node.htm" title="12月29日 | Surfboard节点订阅每天更新19.9M/S免费节点订阅链接，Surfboard免费机场">12月29日 | Surfboard节点订阅每天更新19.9M/S免费节点订阅链接，Surfboard免费机场</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-9-free-surfboard.htm" title="1月9日 | Surfboard节点订阅每天更新20.2M/S免费节点订阅链接，Surfboard免费机场">1月9日 | Surfboard节点订阅每天更新20.2M/S免费节点订阅链接，Surfboard免费机场</a></li>
                        <li class="py-2"><a href="/news/article-33704.htm" title="动物医院收费标准最新消息表图片（动物医院收费标准最新消息表图片大全）">动物医院收费标准最新消息表图片（动物医院收费标准最新消息表图片大全）</a></li>
                        <li class="py-2"><a href="/news/article-19251.htm" title="二叉树与堆">二叉树与堆</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-8-node-share.htm" title="12月8日 | Surfboard节点订阅每天更新21.4M/S免费节点订阅链接，Surfboard免费机场">12月8日 | Surfboard节点订阅每天更新21.4M/S免费节点订阅链接，Surfboard免费机场</a></li>
                        <li class="py-2"><a href="/news/article-29409.htm" title="上海宠物领养中心免费领养狗狗的地方在哪（上海宠物领养中心免费领养狗狗的地方在哪儿）">上海宠物领养中心免费领养狗狗的地方在哪（上海宠物领养中心免费领养狗狗的地方在哪儿）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-11-free-node-subscribe-links.htm" title="1月11日 | Surfboard节点订阅每天更新22.5M/S免费节点订阅链接，Surfboard免费机场">1月11日 | Surfboard节点订阅每天更新22.5M/S免费节点订阅链接，Surfboard免费机场</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-15-node-share.htm" title="10月15日 | Surfboard节点订阅每天更新20.3M/S免费节点订阅链接，Surfboard免费机场">10月15日 | Surfboard节点订阅每天更新20.3M/S免费节点订阅链接，Surfboard免费机场</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-free-node-subscribe.htm" title="12月18日 | Surfboard节点订阅每天更新20.1M/S免费节点订阅链接，Surfboard免费机场">12月18日 | Surfboard节点订阅每天更新20.1M/S免费节点订阅链接，Surfboard免费机场</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- /Features Section -->
    </main>
        <footer id="footer" class="footer position-relative">
        <div class="container copyright text-center mt-4">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
            <p>SurfboardGithub免费节点官网 版权所有 Powered by WordPress</p>
            </div>
        </div>
    </footer>
    <!-- Scroll Top -->
    <a href="#" id="scroll-top" class="scroll-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Preloader -->
    <div id="preloader"></div>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/surfboardgithub/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/surfboardgithub/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/surfboardgithub/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/surfboardgithub/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/surfboardgithub/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/surfboardgithub/swiper/swiper-bundle.min.js"></script>
    <!-- Main JS File -->
    <script src="/assets/website/js/frontend/surfboardgithub/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>